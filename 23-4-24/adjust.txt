% Prompt user to select an Excel file
[filename, pathname] = uigetfile('*.xlsx', 'Select an Excel file');
fullpath = fullfile(pathname, filename);

% Read the Excel file
data = readmatrix(fullpath);
    
% Extract data from the table
elevation = data(:, 1);
azimuth = data(:, 2);
time = data(:, 3);
key_column = data(:, 4); % Column 4 as key column

% Define time interval between each value
time_interval = 2; % in seconds

% Create a colormap for unique values in the key column
unique_keys = unique(key_column);
num_unique_keys = numel(unique_keys);
color_map = hsv(num_unique_keys);

% Create scatter plot
fig = figure;
scatter3(time(1), azimuth(1), elevation(1), 'filled', 'MarkerFaceColor', 'k');
xlabel('Time (seconds)');
ylabel('Azimuth');
zlabel('Elevation');
title('3D Scatter Plot');
hold on;

% Add refresh button
refresh_button = uicontrol('Style', 'pushbutton', 'String', 'Refresh', 'Position', [20 20 70 20], 'Callback', @(src, event) refresh_plot(src, event, fig, data, color_map));

i = 2; % Start index for plotting

while i <= size(data, 1)
    % Plot current data point in black
    scatter3(time(i), azimuth(i), elevation(i), 'filled', 'MarkerFaceColor', 'k');
    
    % Connect the previous point with the current point using a dotted line
    line([time(i-1), time(i)], [azimuth(i-1), azimuth(i)], [elevation(i-1), elevation(i)], 'LineStyle', '--', 'Color', 'k');
    
    % Change color of previous point according to key column
    prev_key_index = find(unique_keys == key_column(i-1));
    scatter3(time(i-1), azimuth(i-1), elevation(i-1), 'filled', 'MarkerFaceColor', color_map(prev_key_index,:));
    
    % Set axis limits
    xlim([min(time) max(time)]);
    ylim([min(azimuth) max(azimuth)]);
    zlim([min(elevation) max(elevation)]);
    
    % Pause for time_interval seconds
    pause(time_interval);
    
    % Check if plot window is closed
    if ~ishandle(fig)
        break;
    end
    
    i = i + 1; % Move to the next data point
end

function refresh_plot(src, event, fig, data, color_map)
    % Get the current point index
    [~, last_index] = max(ishandle(findobj(gca,'Type','scatter')));
    if isempty(last_index)
        last_index = 1; % If no points plotted yet, start from the beginning
    end
    
    clf(fig); % Clear the figure
    
    % Create scatter plot
    scatter3(data(1:last_index, 3), data(1:last_index, 2), data(1:last_index, 1), 'filled', 'MarkerFaceColor', 'k');
    xlabel('Time (seconds)');
    ylabel('Azimuth');
    zlabel('Elevation');
    title('3D Scatter Plot');
    hold on;
    
    % Continue plotting from the last plotted point
    for i = last_index:size(data, 1)
        scatter3(data(i, 3), data(i, 2), data(i, 1), 'filled', 'MarkerFaceColor', 'k');
        if i > last_index
            line([data(i-2, 3), data(i-1, 3), data(i, 3)], [data(i-2, 2), data(i-1, 2), data(i, 2)], [data(i-2, 1), data(i-1, 1), data(i, 1)], 'LineStyle', '--', 'Color', 'k');
        end
        prev_key_index = find(unique(data(:, 4)) == data(i-1, 4));
        scatter3(data(i-1, 3), data(i-1, 2), data(i-1, 1), 'filled', 'MarkerFaceColor', color_map(prev_key_index,:));
        xlim([min(data(:, 3)) max(data(:, 3))]);
        ylim([min(data(:, 2)) max(data(:, 2))]);
        zlim([min(data(:, 1)) max(data(:, 1))]);
        pause(time_interval);
        if ~ishandle(fig)
            break;
        end
    end
end